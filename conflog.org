Configuration Thougts and Log -*- mode: org -*-
#+TAGS: { @Work(w) @Home(h) } @Emacs(e) @OrgMode(o) @Shortcuts(s) @Font(f)
* Org-Mode
** TODO Study more about tagging
   difference??
** LEARNING Study more shortcut
** DONE memorized
  - C-c C-l: input some link
  - C-c C-o: open link
  - C-u Tab: Global cycling
** LEARNING 
  - C-c Tab: (outline-show-children)
  - C-c C-k: (outline-show-all)

*** write down some where not to forget
** resource: [[https://zzamboni.org/post/beautifying-org-mode-in-emacs/]]

* Emacs
** From Mike Zamansky
*** DONE Using emacs 10
**** DONE change init.el to use org mode: looks fancy and organised :-)
     - [[https://www.youtube.com/watch?v=EX9PKK3EMaw][org init file]]
     - youtube: https://www.youtube.com/watch?v=EX9PKK3EMaw
*** TODO dired-narrow [[https://cestlaz.github.io/post/using-emacs-57-dired-narrow]]

** Outside Emacs settings
   [[https://www.emacswiki.org/emacs/EmacsAsDaemon][Emacs as daemon]]
   I used systemd method.
** Emacs lisp study
*** Difference between eq, eql, equal and equalp
   [[https://stackoverflow.com/questions/547436/whats-the-difference-between-eq-eql-equal-and-equalp-in-common-lisp][{stackoverflow: 547436}]]
*** dolist
*** mapc mapcar mapcan
**** https://www.gnu.org/software/emacs/manual/html_node/elisp/Mapping-Functions.html

*** something like `?:' in Emacs Lisp
    (setq result (if testsomething-p 'correct 'incorrect))
*** funcall, apply
**** https://www.gnu.org/software/emacs/manual/html_node/elisp/Calling-Functions.html

** DONE make my own mode for programme mode which includes
   - make a function name work-mode and added to after-change-major-mode-hook
*** DONE common-allow-deny-rule
**** TODO make it version 0.1
***** checkout the layout of el files
      https://www.emacswiki.org/emacs/linum-off.el
*** DONE whitespace
*** DONE display line numbers mode
** DONE Org-mode headline fonts
** DONE Another Bookmark: BM [[https://github.com/joodland/bm]]

* Font Config
** TODO setting for using all-the-icons packages
